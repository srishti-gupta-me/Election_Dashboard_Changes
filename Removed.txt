#Slider and Sub Plots 


voter_head_container=st.container()
voterh_1,voterh_2,voterh_3=voter_head_container.columns([3.5,2,3])
voterh_2.title('Voter Turnout')


voter_container=st.container()
voter_1,voter_2,voter_3=voter_container.columns([1,3,1])
voter=ass_csv('./voterturnout.csv', nrows=100000)

fig = px.bar(voter, x="Year", y="total", animation_frame="State_Name", animation_group="Year",color="State_Name", hover_name="Assembly_No", range_x=[1960,2022], range_y=[0,100], height=600, width=1000)

fig.layout.updatemenus[0].buttons[0].args[1]['frame']['duration'] = 2000
fig.layout.updatemenus[0].buttons[0].args[1]['transition']['duration'] = 500


fig.update_layout(
      title={'text': "",
        'y':1,
        'x':0.5,
        'xanchor': 'center',
        'yanchor': 'top'},
    xaxis_title="Assembly Number",
    yaxis_title="Turnout Percentage",
    legend_title="State Name",
    barmode='group', height=600, width=600)

voter_2.plotly_chart(fig, use_container_width=True)



fig = make_subplots(rows=1, cols=3, subplot_titles=("Voter Turnout-All", "Voter Turnout-Male", "Voter Turnout-Female"))


# All

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Goa']['Assembly_No'],
    y=voter[voter['State_Name']=='Goa']['total'],
    name='Goa',
    marker_color='purple'
),row=1, col=1)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Manipur']['Assembly_No'],
    y=voter[voter['State_Name']=='Manipur']['total'],
    name='Manipur',
    marker_color='green'
),row=1, col=1)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Punjab']['Assembly_No'],
    y=voter[voter['State_Name']=='Punjab']['total'],
    name='Punjab',
    marker_color='red'
),row=1, col=1)


fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Uttarakhand']['Assembly_No'],
    y=voter[voter['State_Name']=='Uttarakhand']['total'],
    name='Uttarakhand',
    marker_color='yellow'
),row=1, col=1)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Uttar_Pradesh']['Assembly_No'],
    y=voter[voter['State_Name']=='Uttar_Pradesh']['total'],
    name='Uttar Pradesh',
    marker_color='blue'
),row=1, col=1)


#Male

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Goa']['Assembly_No'],
    y=voter[voter['State_Name']=='Goa']['male'],showlegend=False,
    name='Goa',
    marker_color='purple'
),row=1, col=2)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Manipur']['Assembly_No'],
    y=voter[voter['State_Name']=='Manipur']['male'],showlegend=False,
    name='Manipur',
    marker_color='green'
),row=1, col=2)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Punjab']['Assembly_No'],
    y=voter[voter['State_Name']=='Punjab']['male'],showlegend=False,
    name='Punjab',
    marker_color='red'
),row=1, col=2)


fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Uttarakhand']['Assembly_No'],
    y=voter[voter['State_Name']=='Uttarakhand']['male'],showlegend=False,
    name='Uttarakhand',
    marker_color='yellow'
),row=1, col=2)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Uttar_Pradesh']['Assembly_No'],
    y=voter[voter['State_Name']=='Uttar_Pradesh']['male'],showlegend=False,
    name='Uttar Pradesh',
    marker_color='blue'
),row=1, col=2)



#Female



fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Goa']['Assembly_No'],
    y=voter[voter['State_Name']=='Goa']['female'],showlegend=False,
    name='Goa',
    marker_color='purple'
),row=1, col=3)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Manipur']['Assembly_No'],
    y=voter[voter['State_Name']=='Manipur']['female'],showlegend=False,
    name='Manipur',
    marker_color='green'
),row=1, col=3)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Punjab']['Assembly_No'],
    y=voter[voter['State_Name']=='Punjab']['female'],showlegend=False,
    name='Punjab',
    marker_color='red'
),row=1, col=3)


fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Uttarakhand']['Assembly_No'],
    y=voter[voter['State_Name']=='Uttarakhand']['female'],showlegend=False,
    name='Uttarakhand',
    marker_color='yellow'
),row=1, col=3)

fig.add_trace(go.Line(
    x=voter[voter['State_Name']=='Uttar_Pradesh']['Assembly_No'],
    y=voter[voter['State_Name']=='Uttar_Pradesh']['female'], showlegend=False,
    name='Uttar Pradesh',
    marker_color='blue'
),row=1, col=3)


#Layout

fig.update_layout(
    
      title={'text': "Voter Turnout- All",
        'y':1,
        'x':0.5,
        'xanchor': 'center',
        'yanchor': 'top'},
    legend_title="State Name",
    barmode='group', height=550, width=500)

fig.update_yaxes(title_text="Turnout Percentage",range=[0,100],row=1, col=1)
fig.update_xaxes(title_text="Assembly Number",range=[0,18], row=1, col=1)

fig.update_yaxes(title_text="Turnout Percentage",range=[0,100],row=1, col=2)
fig.update_xaxes(title_text="Assembly Number",range=[0,18], row=1, col=2)

fig.update_yaxes(title_text="Turnout Percentage",range=[0,100],row=1, col=3)
fig.update_xaxes(title_text="Assembly Number",range=[0,18], row=1, col=3)


st.plotly_chart(fig,use_container_width=True)


#Matplotlib based charts

# nota_container=st.container()
# nota_container.subheader('NOTA Percentage')
# nota_1,nota_2, nota_3=nota_container.columns([2,0.5,2.5])



# nota_2.markdown("""
# <style>
# .vl {
#   border-left: 0.1vw solid grey;
#   margin-left: 3vw;
#   height:80vh;
# }
# </style>
# <div class="vl"></div>
# """, unsafe_allow_html=True)



# read_and_cache_csv = st.cache(suppress_st_warning=True)(pd.read_csv)
# data = read_and_cache_csv('./nota.csv', nrows=100000)

# nota_1.plotly_chart(bar_chart(data.astype(str), data['State'],data['Value'],"","State","Percentage"), use_container_width=True)

# #nota_3.image('./geo.png')

# st.markdown("""<hr/>""", unsafe_allow_html=True)

# #Parties

# st.markdown("<div id='linkto_party'></div>", unsafe_allow_html=True)   
 
# party_container=st.container()
# party_container.subheader('Contesting Parties')

# party_1,party_2, party_3=party_container.columns([2,0.5,2.5])

# read_and_cache_csv = st.cache(suppress_st_warning=True)(pd.read_csv)
# data = read_and_cache_csv('./nota.csv', nrows=100000)

# party_1.plotly_chart(bar_chart(data.astype(str), data.State,data.Value,"","State","Percentage"), use_container_width=True)


# st.markdown("""<hr/>""", unsafe_allow_html=True)



# party_2.markdown("""
# <style>
# .vl {
#   border-left: 0.1vw solid grey;
#   margin-left: 3vw;
#   height:80vh;
# }
# </style>
# <div class="vl"></div>
# """, unsafe_allow_html=True)


# def map_plot(file_link, container_name, color):
#     map_df = gpd.read_file("./maps-master/States/Admin2.shp")
#     map_value= pd.read_csv(file_link)
#     merged = map_df.merge(map_value, how='left', left_on="ST_NM",right_on="State")
#     merged.drop(['State'], axis=1, inplace=True)
#     merged['Value']=merged['Value'].mask(merged['Value'].isnull()==True,-1)

#     # set the value column that will be visualised
#     variable = 'Value'
#     # set the range for the choropleth values
#     vmin, vmax = 0, 100

#     # create figure and axes for Matplotlib
#     fig, ax = plt.subplots(1, figsize=(30, 10))
#     # remove the axis
#     ax.axis('off')


#     # Create colorbar legend
#     sm = plt.cm.ScalarMappable(cmap=color, norm=plt.Normalize(vmin=vmin, vmax=vmax))
#     # empty array for the data range
#     sm.set_array([]) # or alternatively sm._A = []. Not sure why this step is necessary, but many recommends it
#     # add the colorbar to the figure
#     # fig.colorbar(sm)

#     # create map
#     merged.plot(column=variable, cmap=color, linewidth=0.8, ax=ax, edgecolor='0.8')

#     # Add Labels
#     merged['coords'] = merged['geometry'].apply(lambda x: x.representative_point().coords[:])
#     merged['coords'] = [coords[0] for coords in merged['coords']]

#     states=['Manipur','Punjab','Uttarakhand','Goa','Uttar Pradesh']

#     for idx, row in merged.iterrows():

#         if row['ST_NM'] in states:
#             plt.annotate(text=row['Value'], xy=row['coords'],horizontalalignment='center')

#     container_name.pyplot(fig)
    
# map_plot("nota.csv",nota_3,"Blues")
# map_plot("party.csv",party_3,"Oranges")